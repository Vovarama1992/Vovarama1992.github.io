let asker = confirm("Are u ready?");
let count = 0;
function checkChange() {
    if (count % 20 == 0 && count > 0) {
        changedSpeed += 6;
        alertion.hidden = false;
        setTimeout(() => {
            alertion.hidden = true
        }, 1500)
    }
}
let row = [];
alertion.hidden = true;
let changedSpeed = 18;
let countChanger;
let drop;
let undersGood;
let pause = false;
water.style.height = "300px";
let red = 20;
let blue = 220;
water.style.backgroundColor = "rgb(20, 10, 220)";
let img;
function findLevel() {
    unders = [];
        let left = img.getBoundingClientRect().left;
        let right = img.getBoundingClientRect().right;
        
    for (let section of bottom) {
        if (left == section[1]  && right == section[2])  {
            unders.push(section[0].getBoundingClientRect().top);
        }
    };
    undersGood = unders.filter(under => under > 0);
    if (undersGood.length > 0) {
        
        
    bottomLevel = Math.min(...undersGood);
    
    } else {
        bottomLevel = bottle.getBoundingClientRect().bottom;
    }
};


let fires = 0;
let snoflakes = 0;
let bottom = [];
let unders = [];
let bottomLevel = bottle.getBoundingClientRect().bottom;
let speed = 18;
let waterSpeed = speed / 3;
let dropTime;
function push() {
    waterSpeed = speed / 3 - 0.5 * fires;
    img = document.createElement("img");
    img.className = "element";
    document.body.append(img);
    let changer = Math.random();
    img.src = changer > 0.5 ? "images/fire.jpg" : "images/snowflake.jpg";
    if (changer > 0.5) {
        fires += 1;
        red += 20;
        img.look = "fire";
        
        
        blue -= 20;
        
    };
    if (changer <= 0.5) {
        fires -= 1;
        blue += 20;
        
        red -= 20;
        img.look = "snowflake";
        
    };

    img.style.left = bottle.getBoundingClientRect().left + Math.floor(Math.random() * 15) * img.offsetWidth - img.offsetWidth  + "px";
    img.style.right = parseInt(img.style.left) + 20 + "px";
    
    
    
    if (parseInt(img.style.left) < bottle.getBoundingClientRect().left) {
        img.style.left = parseInt(img.style.left) + img.offsetWidth + "px";
        
    };
    findLevel();
    function color(red, blue) {
        water.style.backgroundColor = `rgb(${red}, ${10}, ${blue})`;
       
        }
    

    img.style.top = "10px";
    drop = function() {
        let newTop = parseInt(img.style.top) + speed;
        img.style.top = newTop + "px";
        if (document.elementFromPoint(300, parseInt(img.style.top)) == water) {
            speed = waterSpeed;
            water.classList.add('darker');
            setTimeout(() => water.classList.remove('darker'), 450);
            
            color(red, blue);
            
        };
        if (parseInt(img.style.top) >= bottomLevel - img.offsetHeight) {
            img.style.top = bottomLevel - img.offsetHeight + "px";
            for (let bot of bottom) {
                if (bot[0].getBoundingClientRect().top == img.getBoundingClientRect().top) {
                    row.push(bot[0]);

                }
            }
            console.log(row.length);
            clearInterval(dropTime);
            if (row.length == 13) {
                for (let r of row) {
                    r.remove();
                };
                for (let b of bottom) {
                    if (b[0].getBoundingClientRect().top < img.getBoundingClientRect().top) {
                        let dropper = b[0];
                        dropper.style.top = dropper.getBoundingClientRect().top + 20 + "px";
                    }
                }
                img.remove();
                bottom = bottom.filter(bot => !row.includes(bot[0]));
                row = [];
            } 
            
            let [a, b] = [img.getBoundingClientRect().left, img.getBoundingClientRect().right];
            bottom.push([img, a , b ]);
            water.style.height = 300 + bottom.length * 2 + "px";
            row = [];
            
            unders = [];
            speed = changedSpeed;;
            bottomLevel = bottle.getBoundingClientRect().bottom;
            
            push();
            
        };
    
            
        
        


    };
    dropTime = setInterval(drop, 30);
    
}
window.addEventListener("keydown", function(e) {
    if (e.code == "KeyQ") {
        if (!pause) {
        clearInterval(dropTime);
        clearInterval(countChanger);
    } else {
        dropTime = setInterval(drop, 30);
        countChanger = setInterval(() => {
            count += 1;
            checkChange();
        }, 1000);
    }
        pause = !pause;
        
    }
    
    if (e.code == "KeyA") {
        img.style.left = parseInt(img.style.left) - 20 + "px";
        if (parseInt(img.style.left) < bottle.getBoundingClientRect().left) {
            img.style.left = bottle.getBoundingClientRect().left + "px";
        }
        
        findLevel();
        };
    if (e.code == "KeyD") {
        img.style.left = parseInt(img.style.left) + 20 + "px";
        if (parseInt(img.style.left) > bottle.getBoundingClientRect().right - img.offsetWidth) {
            img.style.left = bottle.getBoundingClientRect().right - img.offsetWidth + "px";
        }
        
        findLevel()
        
    }
})
    

   
    if (asker) {
        push();
        countChanger = setInterval(() => {
            count += 1;
            checkChange();
        }, 1000);
    }